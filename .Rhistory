test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # or comparison with the package tseries and garch from above
# The test gives a little diff. results. Probably something wrong.
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l")
lines(gold_price_FD_var, col="green")
#Model forecasting
test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
#Try EGARCH
spec = ugarchspec(variance.model=list(model="eGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
egarch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean, solver = 'hybrid')
egarch_gold_price_FD
#Try IGARCH
spec = ugarchspec(variance.model=list(model="iGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
igarch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
igarch_gold_price_FD
# Summarizing all coeff:
garch_gold_price_FD$coef  #GARCH t-series
coef(test_garch_gold_price_FD) #sGARCH
coef(test_earch_gold_price_FD)
# Summarizing all coeff:
garch_gold_price_FD$coef  #GARCH t-series
coef(test_garch_gold_price_FD) #sGARCH
coef(egarch_gold_price_FD)
coef(igarch_gold_price_FD)
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l")
lines(gold_price_FD_var, col="green")
#Model forecasting
test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l")
lines(gold_price_FD_var, col="green")
#Model forecasting
test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
#Try GARCH(1,1)
gold_price_FD_clean <- na.remove(gold_price_FD) #always got an error for NA
garch_gold_price_FD <- garch(x=gold_price_FD_clean,order=c(1,1))
summary(garch_gold_price_FD)
AIC(garch_gold_price_FD)
6.8428*length(gold_price_FD_clean)
46873.18*6850
length(gold_price_FD_clean)
6.8428*6850
#Try GARCH(1,1)
gold_price_FD_clean <- na.remove(gold_price_FD) #always got an error for NA
garch_gold_price_FD <- garch(x=gold_price_FD_clean,order=c(1,1))
summary(garch_gold_price_FD)
AIC_GARCH<-AIC(garch_gold_price_FD)
#Try GARCH(1,1)
gold_price_FD_clean <- na.remove(gold_price_FD) #always got an error for NA
garch_gold_price_FD <- garch(x=gold_price_FD_clean,order=c(1,1))
summary(garch_gold_price_FD)
AIC_GARCH_1<-AIC(garch_gold_price_FD)
AIC_GARCH_1
#Try EGARCH
spec = ugarchspec(variance.model=list(model="eGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
egarch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean, solver = 'hybrid')
egarch_gold_price_FD
AIC_eGARCH <- 6.8311*length(gold_price_FD_clean)
AIC_eGARCH
#Try IGARCH
spec = ugarchspec(variance.model=list(model="iGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
igarch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
igarch_gold_price_FD
AIC_iGARCH <- 6.842*length(gold_price_FD_clean)
AIC_iGARCH
# Summarizing all coeff:
garch_gold_price_FD$coef  #GARCH t-series
coef(test_garch_gold_price_FD) #sGARCH
coef(egarch_gold_price_FD) #eGARCH
coef(igarch_gold_price_FD)  #iGARCH
# Summarizing AICs:
AIC_GARCH_1 #GARCH t-series
AIC_GARCH_2 #sGARCH
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l")
lines(gold_price_FD_var, col="green")
#Model forecasting
test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
# Summarizing all coeff:
garch_gold_price_FD$coef  #GARCH t-series
coef(test_garch_gold_price_FD) #sGARCH
coef(egarch_gold_price_FD) #eGARCH
coef(igarch_gold_price_FD)  #iGARCH
# Summarizing AICs:
AIC_GARCH_1 #GARCH t-series
AIC_GARCH_2 #sGARCH
AIC_eGARCH #eGARCH
AIC_iGARCH #iGARCH
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l")
lines(gold_price_FD_var, col="green")
#Model forecasting
test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l", main = "Conditional volatitily forecst")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l")
lines(gold_price_FD_var, col="green")
#Model forecasting
test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l", main = "Conditional volatitily forecst",ylab="volatility")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l",ylab="volatility")
lines(gold_price_FD_var, col="green")
#Model forecasting
test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l", main = "Conditional volatitily forecst",ylab="volatility")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty",ylab="volatility")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l", col="blue")
lines(gold_price_FD_var, col="green")
#Model forecasting
test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l", main = "Conditional volatitily forecst",ylab="volatility")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty",ylab="volatility")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l", col="blue")
lines(gold_price_FD_var, col="green")
#Model forecasting
test_garch_gold_price_FD_fore <- ugarchforecast (test_garch_gold_price_FD, n.ahaed = 10)
test_garch_gold_price_FD_fore
#Plot of the conditional volatitily forecst:
test_garch_gold_price_FD_fore_vol <- test_garch_gold_price_FD_fore@forecast$sigmaFor
plot(test_garch_gold_price_FD_fore_vol, type= "l", main = "Conditional volatitily forecst")
last_40_var <- c(tail(gold_price_FD_var,40),rep(NA,10))
last_40_res <- c(tail((gold_price_FD_res)^2,40),rep(NA,10))
test_garch_gold_price_FD_fore_vol <- c(rep(NA,40),(test_garch_gold_price_FD_fore_vol)^2)
plot(last_40_res, type= "l")
lines(test_garch_gold_price_FD_fore_vol, col="orange")
lines(last_40_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty",ylab="volatility")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l", col="blue")
lines(gold_price_FD_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty",ylab="volatility")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$sigma
plot((gold_price_FD_res)^2, type = "l", col="blue")
lines(gold_price_FD_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
# Plotting the estimated conditional volatility
plot(test_garch_gold_price_FD@fit$sigma, type = "l", main = "Esimated conditional volatilitty",ylab="volatility")
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l", col="blue")
lines(gold_price_FD_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l", col="blue")
lines(gold_price_FD_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l", col="blue",ylab = 'Squared GARCH(1,1) Residuals of FD Gold Price')
lines(gold_price_FD_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l", col="blue",ylab = 'Squared GARCH(1,1) Residuals and Variance of FD Gold Price')
lines(gold_price_FD_var, col="green")
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l", col="blue",ylab = 'residuals^2 and variance', main="GARCH(1,1)")
lines(gold_price_FD_var, col="green")
legend('topleft', legend = c('FD Gold Price reiduals^2','FD Gold Price vairance'),
col = c('blue','green'), bty = "n", pch = c(19,19))
# Check, if the above GARCH(1,1) works with rugarch
#load rugarch library
library(rugarch)
#fit the rugarch sGarch model
spec = ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)), mean.model=list(armaOrder=c(0,0)), distribution="norm")
test_garch_gold_price_FD<- ugarchfit(spec=spec, data=gold_price_FD_clean)
test_garch_gold_price_FD
#Summarizes coeff.
coef(test_garch_gold_price_FD)
garch_gold_price_FD$coef  # for comparison with the package tseries and garch from above, Checked online. It's a common thing. I also changed the spes a lot but wasn't able to get exactly the same result
#calculating AIC:
AIC_GARCH_2 <- 6.8428*length(gold_price_FD_clean)
AIC_GARCH_2
#Plot of squared residuals and est. cond. variance
gold_price_FD_res<-test_garch_gold_price_FD@fit$residuals
gold_price_FD_var<-test_garch_gold_price_FD@fit$var
plot((gold_price_FD_res)^2, type = "l", col="blue",ylab = 'residuals^2 / variance', main="GARCH(1,1)")
lines(gold_price_FD_var, col="green")
legend('topleft', legend = c('FD Gold Price reiduals^2','FD Gold Price vairance'),
col = c('blue','green'), bty = "n", pch = c(19,19))
